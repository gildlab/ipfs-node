version: '3.9'

services:
  gl_ipfs:
    container_name: gl_ipfs
    # image: gildlab/ipfs-node:ipfs
    image: ipfs/kubo:v0.17.0
    restart: always
    # https://docs.ipfs.tech/how-to/run-ipfs-inside-docker/#set-up
    ports:
      - "127.0.0.1:5001:5001"
      - "127.0.0.1:8080:8080"
      - "4001:4001"
      # - "4001:4001/udp"
    volumes:
      - ${GILDLAB_IPFS_NODE_BASE_PATH}/volumes/ipfs/data/ipfs:/data/ipfs
      - ${GILDLAB_IPFS_NODE_BASE_PATH}/volumes/ipfs/export:/export
    env_file:
      - ${GILDLAB_IPFS_NODE_BASE_PATH}/.env

  gl_ngrok_ipfs:
    container_name: gl_ngrok_ipfs
    image: gildlab/ipfs-node:ngrok
    restart: always
    entrypoint: ngrok tunnel --region=us --label edge=${NGROK_EDGE} --log=stdout gl_ipfs:4001
    env_file:
      - ${GILDLAB_IPFS_NODE_BASE_PATH}/.env

    depends_on:
      gl_ipfs:
        condition: service_healthy

  gl_nginx:
    container_name: gl_nginx
    image: gildlab/ipfs-node:nginx
    restart: always
    ports:
      - "80"
    depends_on:
      gl_ipfs:
        condition: service_healthy

  gl_pin:
    container_name: gl_pin
    image: gildlab/ipfs-node:pin
    restart: always
    depends_on:
      gl_ipfs:
        condition: service_healthy
    healthcheck:
      test: nix-shell /pin.sh false
      interval: 30s
      timeout: 60m


  