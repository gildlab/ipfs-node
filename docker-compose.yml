version: '3.9'

services:
  gl_ipfs:
    container_name: gl_ipfs
    image: gildlab/ipfs-node:ipfs
    restart: always
    # dont expose anything in particular use ngrok for that
    ports:
      - "127.0.0.1::4001"
    volumes:
      - ${GILDLAB_IPFS_NODE_BASE_PATH}/volumes/ipfs/data/ipfs:/data/ipfs
      - ${GILDLAB_IPFS_NODE_BASE_PATH}/volumes/ipfs/export:/export
    env_file:
      - ${GILDLAB_IPFS_NODE_BASE_PATH}/.env

  gl_nginx:
    container_name: gl_nginx
    image: gildlab/ipfs-node:nginx
    restart: always
    ports:
      - "127.0.0.1::80"
    volumes:
      - ${GILDLAB_IPFS_NODE_BASE_PATH}/volumes/nginx:/nginx
    depends_on:
      gl_ipfs:
        condition: service_healthy

  gl_pin:
    container_name: gl_pin
    image: gildlab/ipfs-node:pin
    restart: always
    depends_on:
      gl_ipfs:
        condition: service_healthy
    healthcheck:
      test: nix-shell /main.sh false
      interval: 30s
      timeout: 60m
    environment:
      - IPFS_HOST=gl_ipfs
    volumes:
      - ${GILDLAB_IPFS_NODE_BASE_PATH}/volumes/pin:/pin

  gl_ngrok_ipfs:
    container_name: gl_ngrok_ipfs
    image: gildlab/ipfs-node:ngrok
    restart: always
    entrypoint: ngrok tcp --region=${NGROK_REGION} --remote-addr "${GILDLAB_IPFS_NODE_TCP_HOSTNAME}:${GILDLAB_IPFS_NODE_TCP_PORT}" --log=stdout gl_ipfs:4001
    env_file:
      - ${GILDLAB_IPFS_NODE_BASE_PATH}/.env
    depends_on:
      gl_ipfs:
        condition: service_healthy

  gl_ngrok_nginx:
    container_name: gl_ngrok_nginx
    image: gildlab/ipfs-node:ngrok
    restart: always
    entrypoint: ngrok http --region=${NGROK_REGION} --hostname ${GILDLAB_IPFS_NODE_API_HOSTNAME} --log=stdout gl_nginx:80
    env_file:
      - ${GILDLAB_IPFS_NODE_BASE_PATH}/.env
    depends_on:
      - gl_nginx